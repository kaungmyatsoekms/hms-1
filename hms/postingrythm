# Original Function
    # def create_line_with_posting_rhythm(self, reservation_line_id,
    #                                     transaction_date, package_ids):
    #     res = reservation_line_id
    #     total_amount_include = 0.0
    #     total_room_rate = 0.0
    #     check_pkg = ''
    #     for pkg in package_ids:
    #         check_pkg = pkg.rate_attribute
    #         posted_dates = res.get_posting_date(res, pkg)
    #         if transaction_date in posted_dates:
    #             rate = res.rate_calculate(pkg, res)
    #             total_amount = res.total_amount_calculate(rate, pkg, res)
    #             if total_amount == 0.0 and rate > 0.0:
    #                 res.create_charge_line(res.property_id, pkg.transaction_id,
    #                                        res, rate, total_amount, False, pkg,
    #                                        transaction_date, res.rooms, False,
    #                                        pkg.rate_attribute)
    #             else:
    #                 res.create_charge_line(res.property_id, pkg.transaction_id,
    #                                        res, rate, total_amount, True, pkg,
    #                                        transaction_date, res.rooms, False,
    #                                        pkg.rate_attribute)
    #             if pkg.rate_attribute == 'INR':
    #                 total_amount_include += total_amount
    #                 if total_amount > 0.0:
    #                     total_room_rate += rate
    #     # For Room Charge Transaction
    #     if check_pkg != 'SS':
    #         pkg = self.env['hms.package.header']
    #         # Pass room rate from ratecode details based on transaction date
    #         ratecode_detail_obj = self.env['hms.ratecode.details'].search([
    #             ('property_id', '=', res.property_id.id),
    #             ('ratehead_id', '=', res.ratehead_id.id),
    #             ('start_date', '<=', transaction_date),
    #             ('end_date', '>=', transaction_date),
    #             ('roomtype_id', 'in', res.room_type.id)
    #         ])
    #         if ratecode_detail_obj and len(ratecode_detail_obj) == 1:
    #             temp_rate = res._check_rate(transaction_date, res.pax,
    #                                         ratecode_detail_obj,
    #                                         res.property_id.id)
    #         else:
    #             temp_rate = 0.0

    #         room_rate = temp_rate - total_room_rate
    #         room_amount = (temp_rate * res.rooms) - total_amount_include
    #         res.create_charge_line(res.property_id,
    #                                res.ratecode_id.transaction_id, res,
    #                                room_rate, room_amount, True, pkg,
    #                                transaction_date, res.rooms, False, 'INR')



# Original Posting Rythms
    # def update_line_with_posting_rhythm(self, reservation_line_id, delete):
    #     res = reservation_line_id
    #     day_count = 0
    #     for rec in range(res.nights):
    #         transaction_date = res.arrival + timedelta(days=day_count)
    #         if res.package_id:
    #             total_amount_include = 0.0
    #             total_room_rate = 0.0
    #             room_transaction_line_objs = self.env[
    #                 'hms.room.transaction.charge.line'].search([
    #                     ('property_id', '=', res.property_id.id),
    #                     ('reservation_line_id', '=', res.id),
    #                     ('transaction_date', '=', transaction_date),
    #                     ('rate_attribute', '!=', 'SS'),
    #                     ('delete', '=', delete), '|', ('active', '=', True),
    #                     ('active', '=', False)
    #                 ])
    #             if room_transaction_line_objs:
    #                 for r in room_transaction_line_objs:
    #                     for pkg in res.package_id.package_ids:
    #                         posted_dates = res.get_posting_date(res, pkg)
    #                         if transaction_date in posted_dates:
    #                             rate = res.rate_calculate(pkg, res)
    #                             total_amount = res.total_amount_calculate(
    #                                 rate, pkg, res)
    #                             if r.package_id.id == pkg.id and r.transaction_id.id == pkg.transaction_id.id:
    #                                 if total_amount == 0.0 and rate > 0.0:
    #                                     res.update_charge_line(
    #                                         r, pkg.transaction_id, rate,
    #                                         total_amount, False, pkg,
    #                                         transaction_date, res.rooms, False,
    #                                         pkg.rate_attribute)
    #                                 else:
    #                                     res.update_charge_line(
    #                                         r, pkg.transaction_id, rate,
    #                                         total_amount, True, pkg,
    #                                         transaction_date, res.rooms, False,
    #                                         pkg.rate_attribute)
    #                                 if pkg.rate_attribute == 'INR':
    #                                     total_amount_include += total_amount
    #                                     if total_amount > 0.0:
    #                                         total_room_rate += rate
    #                             else:
    #                                 if not r.package_id:
    #                                     pkg = self.env['hms.package.header']
    #                                     # Pass room rate from ratecode details based on transaction date
    #                                     ratecode_detail_obj = self.env[
    #                                         'hms.ratecode.details'].search([
    #                                             ('property_id', '=',
    #                                              res.property_id.id),
    #                                             ('ratehead_id', '=',
    #                                              res.ratehead_id.id),
    #                                             ('start_date', '<=',
    #                                              transaction_date),
    #                                             ('end_date', '>=',
    #                                              transaction_date),
    #                                             ('roomtype_id', 'in',
    #                                              res.room_type.id)
    #                                         ])
    #                                     if ratecode_detail_obj and len(
    #                                             ratecode_detail_obj) == 1:
    #                                         temp_rate = res._check_rate(
    #                                             transaction_date, res.pax,
    #                                             ratecode_detail_obj,
    #                                             res.property_id.id)
    #                                     else:
    #                                         temp_rate = 0.0

    #                                     room_rate = temp_rate - total_room_rate
    #                                     room_amount = (temp_rate * res.rooms
    #                                                    ) - total_amount_include
    #                                     res.update_charge_line(
    #                                         r, res.ratecode_id.transaction_id,
    #                                         room_rate, room_amount, True, pkg,
    #                                         transaction_date, res.rooms, False,
    #                                         'INR')
    #             else:
    #                 res.create_line_with_posting_rhythm(
    #                     res, transaction_date, res.package_id.package_ids)

    #         day_count += 1